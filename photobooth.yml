---
# We are using Ansible Tower for the data entry
# Variables from Tower Survey:
# visitor_fullname
# visitor_company
# visitor_email
# Location options: sc-akl / sc-wtn / sc-chch / golfday
- name: Photobooth - Capture Photo
  hosts: localhost
  gather_facts: no

  vars:
    - mpjeg_url: "http://192.168.4.245:8008"
    - showcase_home: "/usr/share/showcase"

  tasks:
  # Generate unique id for visitor entry
  - name: generate unique id
    shell: "{{ showcase_home }}/unique_id.sh {{ visitor_fullname }}"
    register: uniqueid

  # Playback counting down video
  - name: playback countdown
    become: yes
    become_method: su
    become_user: feliz
    shell: "export DISPLAY=:0; /usr/bin/vlc {{ showcase_home }}/countdown.mp4"
  - name: wait for countdown
    wait_for: timeout=7
  - name: play shutter sound
    shell: "export DISPLAY=:0; /bin/play {{ showcase_home }}/shutter.aiff"
  #  become: yes
  #  become_method: su
  #  become_user: feliz
  #  shell: "export DISPLAY=:0; /usr/bin/vlc {{ showcase_home }}/shutter.aiff"

  # Capture jpeg from camera (mjpeg stream)
  - name: capture jpeg
    shell: "ffmpeg -i {{ mpjeg_url }} -frames 1 -q:v 1 /tmp/output.jpg -y"

  # Append photo with banner at the bottom
  - name: append banner to photo
    shell: "convert -append /tmp/output.jpg {{ showcase_home }}/bottom_{{ location }}.png /tmp/output_append.jpg"

# Upload photo to the cloud webserver
# We will have 2 picture files, one for flyer unique_id_f.jpg, 
# and appended photo with banner unique_id.jpg
- name: Photobooth - Upload Photo to Cloud WebServer
  hosts: showcase-webserver-01
  gather_facts: no
  become: yes
  become_method: sudo

  vars:
    - photowebpath: "/var/www/html/photo/{{ location }}"
    - unique_id: "{{ lookup('file', '/tmp/new_unique_id.txt') }}"

  tasks:
  - name: upload flyer photo to webserver
    copy:
      src: "/tmp/output.jpg"
      dest: "{{ photowebpath }}/{{ unique_id }}_f.jpg"
      mode: u=rw,g=r,o=r

  - name: upload appended photo to webserver
    copy:
      src: "/tmp/output_append.jpg"
      dest: "{{ photowebpath }}/{{ unique_id }}.jpg"
      mode: u=rw,g=r,o=r


# Create database entry for visitor
- name: Photobooth - Create Database Entry on DBServer
  hosts: showcase-dbserver
  gather_facts: no
  become: yes
  become_method: sudo

  vars:
    - unique_id: "{{ lookup('file', '/tmp/new_unique_id.txt') }}"

  tasks:
  - name: create an sql file from template
    template:
      src: templates/insert_table.sql.j2
      dest: /tmp/insert_table.sql

  - name: insert database entries
    mysql_db:
      name: showcase
      login_user: ansible
      login_password: redhat
      login_unix_socket: "/var/lib/mysql/mysql.sock"
      config_file: "/etc/my.cnf"      
      state: import
      target: /tmp/insert_table.sql

  #- name: test table output
  #  command: 'mysql -uansible -predhat showcase -e "select * from visitor;"'
  #  register: tableoutput
  #- name: display table output
  #  debug:
  #    var: tableoutput.stdout_lines

# Printing Flyer
- name: Photobooth - Printing Flyer
  hosts: localhost
  gather_facts: no

  vars:
    #- webserver_public_ip: "{{ hostvars['showcase-webserver-01']['public_ip'] }}"
    - webserver_public_ip: "www.redhatnz.com"
    - unique_id: "{{ lookup('file', '/tmp/new_unique_id.txt') }}"
    - printoutpath: "/home/feliz/showcase/printout.png"
    - print_flyer: "No"
    - printer_name: "L310"
  
  tasks:
  - name: preparing flyer
    shell: "firefox --headless --new-instance --screenshot {{ printoutpath }} http://{{ webserver_public_ip }}/flyer/{{ unique_id }}"
    when: print_flyer == "Yes"

  - name: print flyer
    shell: "lpr -P {{ printer_name }} {{ printoutpath }}"
    when: print_flyer == "Yes"

  # Shows Unique ID
  - name: display photobooth unique id
    debug:
      msg: new unique id is {{ unique_id }}  
...