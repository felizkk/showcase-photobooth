---
- name: Photobooth Playbook
  hosts: localhost
  gather_facts: no

  vars:
    # Variables from Tower Survey:
    # visitor_fullname
    # visitor_company
    # visitor_email
    # Location options: sc-akl / sc-wtn / sc-chch / golfday
    - location: "sc-akl"
    - mpjeg_url: "http://192.168.1.245:8008"
    - photowebpath: "/var/www/html/photo/{{ location }}"
    - webserver_ip: "40.126.236.101"
    - showcase_home: "/home/feliz/showcase"

  tasks:
  # Playback counting down video
  - name: playback countdown
    shell: 'su - feliz -c "export DISPLAY=:0; /usr/bin/vlc {{ showcase_home }}/countdown.mp4"'
  - name: wait for countdown
    wait_for: timeout=7

  # Using sound clip from sox app (play) 
  - name: play shutter sound
    shell: "play {{ showcase_home }}/shutter.aiff"

  # Capture jpeg from camera (mjpeg stream)
  - name: capture jpeg
    shell: "ffmpeg -i {{ mpjeg_url }} -frames 1 -q:v 1 {{ showcase_home }}/output.jpg -y"

  # Generate unique id for visitor entry
  - name: generate unique id
    shell: script/unique_id.sh {{ visitor_fullname }}
    register: uniqueid

  # Upload photo to the cloud webserver
  - name: upload photo to webserver
    copy:
      src: "{{ showcase_home }}/output.jpg"
      dest: "{{ photowebpath }}/{{ uniqueid.stdout_lines[0] }}.jpg"
      mode: u=rw,g=r,o=r
    delegate_to: showcase-webserver-01

  # Create database entry for visitor
  - name: create an sql file from template
    template:
      src: templates/insert_table.sql.j2
      dest: /tmp/insert_table.sql
    delegate_to: showcase-dbserver 
  - name: insert database entries
    mysql_db:
      name: showcase
      login_user: ansible
      login_password: redhat
      login_unix_socket: "/var/lib/mysql/mysql.sock"
      config_file: "/etc/my.cnf"      
      state: import
      target: /tmp/insert_table.sql
    delegate_to: showcase-dbserver  

  - name: test table output
    command: 'mysql -uansible -predhat showcase -e "select * from visitor;"'
    register: tableoutput
    delegate_to: showcase-dbserver
  - name: display table output
    debug:
      var: tableoutput.stdout_lines

  # Printing Flyer
  - name: printing flyer
    shell: "firefox --headless --screenshot printout.png http://{{ webserver_ip }}/flyer/{{ uniqueid.stdout_lines[0] }}"

  # Shows Unique ID
  - name: display photobooth unique id
    debug:
      msg: new unique id is {{ uniqueid.stdout_lines[0] }}
...